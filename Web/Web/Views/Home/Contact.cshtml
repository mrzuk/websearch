@model Web.Models.Email.ContactUs

@{
    ViewBag.Title = "Contact us";
}

@section navbar{
<div class="container nav-container">
    <h2>
        Contact us
    </h2>
</div>
}

<div class="section1">
    <div class="container">
        <div class="row">

            <h2>Any doubts or general questions?</h2><br />
            <p>
                If you don't know which project fits you best or you would like to know more about EA Research generally, you can use the form below to contact us, or email us directly at XXX.
            </p>
            <br />
        </div>
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <div class="row">
                <div class="col-md-6">
                    <label for="basic-url">full name</label>
                    <div class="input-group-lg">

                        @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control", aria_describedby = "sizing-addon2" } })
                        @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })

                    </div>

                    <br />
                    <br />

                    <label for="basic-url">e-mail</label>
                    <div class="input-group-lg">

                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", aria_describedby = "sizing-addon2" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>

                    <br />
                    <br />

                    <label for="basic-url">message</label>
                    <div class="input-group-lg">

                        @Html.EditorFor(model => model.MessageContent, new { htmlAttributes = new { @class = "form-control message", aria_describedby = "sizing-addon2" } })
                        @Html.ValidationMessageFor(model => model.MessageContent, "", new { @class = "text-danger" })
                    </div>

                    <br />
                    <br />
                    <input id="submitButton" type="submit" value="Submit" class="btn btn-default pull-right" />

                    <br />
                    <br />
                    <br />
                    <br />
                </div>
            </div>


        }
    </div>
    </div>
    @*@using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <div class="contact">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })

                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })

            </div>

                <div class="contact">
                    @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })

                </div>

                <div class="contact">
                    @Html.LabelFor(model => model.MessageContent, htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.TextAreaFor(model => model.MessageContent, new { @class = "form-control", rows = 5 })
                    @Html.ValidationMessageFor(model => model.MessageContent, "", new { @class = "text-danger" })

                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input id="submitButton" type="submit" value="Submit" class="btn btn-default" />
                    </div>
                </div>

        }*@

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
        @Scripts.Render("~/bundles/create")

    }
