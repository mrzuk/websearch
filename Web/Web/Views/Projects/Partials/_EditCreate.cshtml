@model Web.Models.View.ProjectView

@using Web.Helpers
<div class="form-horizontal">
    <h4>Project</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    @Html.HiddenFor(model => model.Date)

    @if (string.IsNullOrEmpty(Model.UserEmail))
    {
        <div class="form-group">
            <label class="control-label col-md-2" for="UserEmail">Your email</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserEmail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserEmail, "", new { @class = "text-danger" })
            </div>
        </div>
    }
    @if (!string.IsNullOrEmpty(Model.UserEmail))
    {
        <div class="form-group">
            @Html.LabelFor(model => model.UserEmail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.UserEmail)
            </div>
        </div>
    }

    @if (string.IsNullOrEmpty(Model.UserName))
    {
        <div class="form-group">
            <label class="control-label col-md-2" for="UserEmail">Your full name</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>
    }

    @if (!string.IsNullOrEmpty(Model.UserName))
    { 
        <div class="form-group">
        @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.UserName)
        </div>
    </div>
    }

    <div class="form-group">
        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ProjectArea, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ProjectArea, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ProjectArea, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control input-lg" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SpecificProjects, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SpecificProjects, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SpecificProjects, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Impact, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Impact, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Impact, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Skills, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Skills, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Skills, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SourceLink, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SourceLink, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SourceLink, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SuggestedReading, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SuggestedReading, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SuggestedReading, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SuggestedMethods, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SuggestedMethods, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SuggestedMethods, "", new { @class = "text-danger" })
        </div>
    </div>

    @if (ViewBag.ShowApprove != null && ViewBag.ShowApprove == true) {
    <div class="form-group">
        @Html.LabelFor(model => model.IsApproved, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.IsApproved)
                @Html.ValidationMessageFor(model => model.IsApproved, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    }

    <div class="form-group">
        <label class="control-label col-md-2" for="SuitableSubjects">Suitable Subjects</label>
        <div class="col-md-10">
            @Html.CheckBoxListFor(model => model.SuitableSubjects, (IEnumerable<SelectListItem>)ViewBag.SuitableSubject)
            @Html.ValidationMessageFor(model => model.SuitableSubjects)
        </div>
    </div>



    <div class="form-group">
        <label class="control-label col-md-2" for="Causes">Causes</label>
        <div class="col-md-10">
            @Html.CheckBoxListFor(model => model.Causes, (IEnumerable<SelectListItem>)ViewBag.Cause)
            @Html.ValidationMessageFor(model => model.Causes)
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2" for="SuitableLevels">Suitable Levels</label>
        <div class="col-md-10">
            @Html.CheckBoxListFor(model => model.SuitableLevels, (IEnumerable<SelectListItem>)ViewBag.SuitableLevel)
            @Html.ValidationMessageFor(model => model.SuitableLevels)
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input id="submitButton" type="submit" value="Submit" class="btn btn-default" />
        </div>
    </div>
</div>